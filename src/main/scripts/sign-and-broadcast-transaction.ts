import { log, signMessage, broadcastSignedMessage } from "../utils/common";
import { ethers } from "ethers";

const logger = log.getLogger("sign and broadcast");

async function main() {
  try {
    const dataToSign =
      "0x733214a333631d44387fd3fb260c6e9118d26439ba18c0240023778ac9f59d680b41d13d00000000000000000000000000000000000000000000000000000000000000c00000000000000000000000000000000000000000000000000000000000000100000000000000000000000000f271aafc62634e6dc9a276ac0f6145c4fdbe2ced00000000000000000000000000000000000000000000000000659cd351b5ce03000000000000000000000000000000000000000000000000000000000000016000000000000000000000000000000000000000000000000000000000000000086c6966692d617069000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000002a30783030303030303030303030303030303030303030303030303030303030303030303030303030303000000000000000000000000000000000000000000000000000000000000000000000def171fe48cf0115b1d80b88dc8eab59176fee57000000000000000000000000216b4b4ba9f3e719726886d34a177484278bfcae000000000000000000000000420000000000000000000000000000000000004200000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000034461e1d689cf400000000000000000000000000000000000000000000000000000000000000000e000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000264a6886da900000000000000000000000000000000000000000000000000000000000000200000000000000000000000004200000000000000000000000000000000000042000000000000000000000000eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee000000000000000000000000e592427a0aece92de3edee1f18e0157c058615640000000000000000000000000000000000000000000000034461e1d689cf400000000000000000000000000000000000000000000000000000659cd351b5ce030000000000000000000000000000000000000000000000000070e723b01f56ae0100000000000000000000000000000000000000000000000000000000004000000000000000000000000000000000000000000000000000000000006695baaf000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000001231deb6f5749ef6ce6943a275a1d3e7486f4eae00000000000000000000000000000000000000000000000000000000000001c0000000000000000000000000000000000000000000000000000000000000022078354cd147374d379a48ecc0ecbbf61d00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000002b42000000000000000000000000000000000000420001f44200000000000000000000000000000000000006000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";

    const signedMessage = await signMessage(logger, dataToSign);

    const broadcastResult = await broadcastSignedMessage(logger, signedMessage);

    if (broadcastResult) {
      logger.info("Successfully broadcast signed data to Optimism");
      logger.debug("Broadcast result:", broadcastResult);
      logger.info("Transaction hash:", broadcastResult.hash);
      logger.info(
        "Check transaction at: https://optimistic.etherscan.io/tx/" +
          broadcastResult.hash,
      );
    } else {
      throw new Error("Failed to broadcast signed message");
    }
  } catch (error) {
    logger.error("Failed to sign and broadcast");
    logger.debug(error);
  }
}

main().catch((err) => {
  logger.error("There was an error in the main function");
  logger.debug(err);
});
